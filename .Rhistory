select(monthNum, .fitted, .se.fit)
}
splitLoess <- exports %>%
group_by(country) %>%
mutate(monthNum = as.numeric(monthFac)) %>%
nest() %>%
mutate(fit = purrr::map(data, getLoess),
fit = purrr::map(fit, select, -monthNum)) %>%
unnest() %>%
select(country, monthFac, volume, .fitted, .se.fit) %>%
group_by(country, monthFac) %>%
mutate(mean = mean(volume)) %>%
ungroup() %>%
distinct(country, monthFac, mean, .fitted, .se.fit)
plot_ly() %>%
## Brazil average points
add_trace(name = "Brazil", legendgroup = "Brazil", showlegend = FALSE,
data = filter(splitLoess, country == "Brazil"),
marker = list(color = blogColours[1]),
x = ~monthFac, y = ~mean, type = "scatter", mode = "markers") %>%
## Brazil loess curve
add_lines(name = "Brazil", legendgroup = "Brazil",
data = filter(splitLoess, country == "Brazil"),
line = list(shape = "spline", smoothing = 1.3, simplify = FALSE, color = blogColours[1]),
x = ~monthFac, y = ~.fitted) %>%
## Brazil confidence interval
add_ribbons(data = filter(splitLoess, country == "Brazil"),
name = "Brazil", legendgroup = "Brazil", showlegend = FALSE,
x = ~monthFac,
line = list(shape = "spline", smoothing = 1.3, simplify = FALSE, color = paste0(blogColours[1], "80")),
fillcolor = paste0(blogColours[1], "80"),
ymin = ~.fitted - 1.96*.se.fit,
ymax = ~.fitted + 1.96*.se.fit) %>%
## Vietnam average points
add_trace(legendgroup = "Vietnam", showlegend = FALSE,
data = filter(splitLoess, country == "Vietnam"),
marker = list(color = blogColours[2]),
x = ~monthFac, y = ~mean, type = "scatter", mode = "markers") %>%
## Vietnam loess curve
add_lines(name = "Vietnam", legendgroup = "Vietnam",
data = filter(splitLoess, country == "Vietnam"),
line = list(shape = "spline", smoothing = 1.3, simplify = FALSE, color = blogColours[2]),
x = ~monthFac, y = ~.fitted) %>%
## Vietnam confidence interval
add_ribbons(data = filter(splitLoess, country == "Vietnam"),
name = "Vietnam", legendgroup = "Vietnam", showlegend = FALSE,
x = ~monthFac,
line = list(shape = "spline", smoothing = 1.3, simplify = FALSE, color = paste0(blogColours[2], "80")),
fillcolor = paste0(blogColours[2], "80"),
ymin = ~.fitted - 1.96*.se.fit,
ymax = ~.fitted + 1.96*.se.fit) %>%
layout(title = "Average exports by Brazil and Vietnam",
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "Million 60kg bags"),
font = list(color = "#515151"))
exports <- read_csv(file.path(project, "input/vnFinalBr.csv")) %>%
filter(date >= lubridate::dmy("01-10-2010")) %>%
mutate(monthFac = ordered(lubridate::month(date),
levels = c(10:12, 1:9),
labels = month.abb[c(10:12, 1:9)]))
getLoess <- function(x) {
broom::augment(loess(volume~monthNum, data = x)) %>%
select(monthNum, .fitted, .se.fit)
}
splitLoess <- exports %>%
group_by(country) %>%
mutate(monthNum = as.numeric(monthFac)) %>%
nest() %>%
mutate(fit = purrr::map(data, getLoess),
fit = purrr::map(fit, select, -monthNum)) %>%
unnest() %>%
select(country, monthFac, volume, .fitted, .se.fit) %>%
group_by(country, monthFac) %>%
mutate(mean = mean(volume)) %>%
ungroup() %>%
distinct(country, monthFac, mean, .fitted, .se.fit)
plot_ly() %>%
## Brazil average points
add_trace(name = "Brazil", legendgroup = "Brazil", showlegend = FALSE,
data = filter(splitLoess, country == "Brazil"),
marker = list(color = blogColours[1]),
x = ~monthFac, y = ~mean, type = "scatter", mode = "markers") %>%
## Brazil loess curve
add_lines(name = "Brazil", legendgroup = "Brazil",
data = filter(splitLoess, country == "Brazil"),
line = list(shape = "spline", smoothing = 1.3, simplify = FALSE, color = blogColours[1]),
x = ~monthFac, y = ~.fitted) %>%
## Brazil confidence interval
add_ribbons(data = filter(splitLoess, country == "Brazil"),
name = "Brazil", legendgroup = "Brazil", showlegend = FALSE,
x = ~monthFac,
line = list(shape = "spline", smoothing = 1.3, simplify = FALSE, color = paste0(blogColours[1], "80")),
fillcolor = paste0(blogColours[1], "80"),
ymin = ~.fitted - 1.96*.se.fit,
ymax = ~.fitted + 1.96*.se.fit) %>%
## Vietnam average points
add_trace(legendgroup = "Vietnam", showlegend = FALSE,
data = filter(splitLoess, country == "Vietnam"),
marker = list(color = blogColours[2]),
x = ~monthFac, y = ~mean, type = "scatter", mode = "markers") %>%
## Vietnam loess curve
add_lines(name = "Vietnam", legendgroup = "Vietnam",
data = filter(splitLoess, country == "Vietnam"),
line = list(shape = "spline", smoothing = 1.3, simplify = FALSE, color = blogColours[2]),
x = ~monthFac, y = ~.fitted) %>%
## Vietnam confidence interval
add_ribbons(data = filter(splitLoess, country == "Vietnam"),
name = "Vietnam", legendgroup = "Vietnam", showlegend = FALSE,
x = ~monthFac,
line = list(shape = "spline", smoothing = 1.3, simplify = FALSE, color = paste0(blogColours[2], "80")),
fillcolor = paste0(blogColours[2], "80"),
ymin = ~.fitted - 1.96*.se.fit,
ymax = ~.fitted + 1.96*.se.fit) %>%
layout(title = "Average exports by Brazil and Vietnam",
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "Million 60kg bags"),
font = list(color = "#515151"))
pVnHist %>%
add_annotations(x = 1.15, y = -0.1,
# xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: ICO</i>") %>%
layout(title = "Rise of coffee production in Vietnam",
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "Million 60kg bags", zeroline = FALSE),
margin = list(b = 40),
font = list(color = "#515151", family = "sans-serif"))
pVnHist %>%
add_annotations(x = 1.15, y = -0.1,
xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: ICO</i>") %>%
layout(title = "Rise of coffee production in Vietnam",
xaxis = list(title = "", showgrid = FALSE),
yaxis = list(title = "Million 60kg bags", zeroline = FALSE),
margin = list(b = 40),
font = list(color = "#515151", family = "sans-serif"))
plot_ly(pYieldData,
x = ~value, y = ~country, type = "bar", orientation = "h", color = ~country,
marker = list(color = c(rep(blogColours[3], 8), blogColours[1], blogColours[2])),
text = ~paste0(country, ": ", format(value, digits = 1, big.mark = ","), " kg/ha"),
hoverinfo = "text") %>%
add_annotations(x = "2600", y = -0.12, xref = "x", yref = "paper", showarrow = F,
xanchor = "right",
text = "<i>Source: FAO</i>") %>%
layout(title = "Coffee yields by country",
xaxis = list(title = "(kg/ha)", separatethousands = TRUE, zeroline = FALSE),
yaxis = list(title = ""),
font  = list(family = "sans-serif", color = "#515151"),
margin = list(r = 20, b = 40),
showlegend = FALSE)
top10 <- prodAll %>%
group_by(Country) %>% top_n(n = 1, wt = year) %>% ungroup() %>%
top_n(n = 10, wt = value) %>% magrittr::extract2('Country')
pYieldData <- read_csv(file.path(coffeestats, "input/faostat.csv")) %>%
select(country = Area, year = Year, value = Value) %>%
# Fix spelling
mutate(country = ifelse(grepl("Viet Nam", country), "Vietnam", country)) %>%
# Make sure it's the most recent year
group_by(country) %>% top_n(n = 1, wt = year) %>% ungroup() %>%
# Get top 10 producers; make into factor for plot, fix units
filter(country %in% top10) %>%
mutate(country = forcats::fct_reorder(country, value),
value = value/10)
plot_ly(pYieldData,
x = ~value, y = ~country, type = "bar", orientation = "h", color = ~country,
marker = list(color = c(rep(blogColours[3], 8), blogColours[1], blogColours[2])),
text = ~paste0(country, ": ", format(value, digits = 1, big.mark = ","), " kg/ha"),
hoverinfo = "text") %>%
add_annotations(x = "2600", y = -0.12, xref = "x", yref = "paper", showarrow = F,
xanchor = "right",
text = "<i>Source: FAO</i>") %>%
layout(title = "Coffee yields by country",
xaxis = list(title = "(kg/ha)", separatethousands = TRUE, zeroline = FALSE),
yaxis = list(title = ""),
font  = list(family = "sans-serif", color = "#515151"),
margin = list(r = 20, b = 40),
showlegend = FALSE)
plot_ly(pYieldData,
x = ~value, y = ~country, type = "bar", orientation = "h", color = ~country,
marker = list(color = c(rep(blogColours[3], 8), blogColours[1], blogColours[2])),
text = ~paste0(country, ": ", format(value, digits = 1, big.mark = ","), " kg/ha"),
hoverinfo = "text") %>%
add_annotations(x = 1.15, y = -0.1,
xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: FAO</i>") %>%
layout(title = "Coffee yields by country",
xaxis = list(title = "(kg/ha)", separatethousands = TRUE, zeroline = FALSE),
yaxis = list(title = ""),
font  = list(family = "sans-serif", color = "#515151"),
margin = list(r = 20, b = 40),
showlegend = FALSE)
plot_ly(pYieldData,
x = ~value, y = ~country, type = "bar", orientation = "h", color = ~country,
marker = list(color = c(rep(blogColours[3], 8), blogColours[1], blogColours[2])),
text = ~paste0(country, ": ", format(value, digits = 1, big.mark = ","), " kg/ha"),
hoverinfo = "text") %>%
add_annotations(x = 1, y = -0.1,
xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: FAO</i>") %>%
layout(title = "Coffee yields by country",
xaxis = list(title = "(kg/ha)", separatethousands = TRUE, zeroline = FALSE),
yaxis = list(title = ""),
font  = list(family = "sans-serif", color = "#515151"),
margin = list(r = 20, b = 40),
showlegend = FALSE)
plot_ly(pYieldData,
x = ~value, y = ~country, type = "bar", orientation = "h", color = ~country,
marker = list(color = c(rep(blogColours[3], 8), blogColours[1], blogColours[2])),
text = ~paste0(country, ": ", format(value, digits = 1, big.mark = ","), " kg/ha"),
hoverinfo = "text") %>%
add_annotations(x = 1, y = -0.15,
xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: FAO</i>") %>%
layout(title = "Coffee yields by country",
xaxis = list(title = "(kg/ha)", separatethousands = TRUE, zeroline = FALSE),
yaxis = list(title = ""),
font  = list(family = "sans-serif", color = "#515151"),
margin = list(r = 20, b = 40),
showlegend = FALSE)
plot_ly(pYieldData,
x = ~value, y = ~country, type = "bar", orientation = "h", color = ~country,
marker = list(color = c(rep(blogColours[3], 8), blogColours[1], blogColours[2])),
text = ~paste0(country, ": ", format(value, digits = 1, big.mark = ","), " kg/ha"),
hoverinfo = "text") %>%
add_annotations(x = 1, y = -0.12,
xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: FAO</i>") %>%
layout(title = "Coffee yields by country",
xaxis = list(title = "(kg/ha)", separatethousands = TRUE, zeroline = FALSE),
yaxis = list(title = ""),
font  = list(family = "sans-serif", color = "#515151"),
margin = list(r = 20, b = 40),
showlegend = FALSE)
subplot(pBr, pVn, shareY = FALSE, shareX = FALSE, titleY = FALSE) %>%
layout(title = "Recent production trends in Brazil and Vietnam",
showlegend = FALSE,
yaxis = list(title="Million 60kg bags", zeroline = FALSE),
xaxis = list(title="", zeroline = FALSE),
font = list(family = "sans-serif", color = "#515151"),
margin = list(b = 20))
pBr <- plot_ly(prodAll %>%
filter(Country == "Brazil", year >= "2000") %>%
mutate(year = lubridate::dmy(paste0("01-01-", year))),
x = ~ year, y = ~value/1000) %>%
add_trace(type = "bar", marker = list(color = blogColours[1]), opacity = 0.5,
text = ~paste0("(", lubridate::year(year), ") ", round(value/1000, 1), "m bags"),
hoverinfo = "text") %>%
add_trace(type = "scatter", mode = "lines", line = list(color = blogColours[1]),
hoverinfo = "none",
y = ~(fitted(loess(value~year, data = prodAll %>%
filter(Country == "Brazil", year >= "2000")))/1000)) %>%
layout(yaxis = list(zeroline = FALSE))
pVn <- plot_ly(prodAll %>%
filter(Country == "Vietnam", year >= "2000") %>%
mutate(year = lubridate::dmy(paste0("01-01-", year))),
x = ~year, y = ~value/1000) %>%
add_trace(type = "bar", marker = list(color = blogColours[2]), opacity = 0.5,
text = ~paste0("(", lubridate::year(year), ") ", round(value/1000, 1), "m bags"),
hoverinfo = "text") %>%
add_trace(type = "scatter", mode = "lines", line = list(color = blogColours[2]),
hoverinfo = "none",
y = ~(fitted(loess(value~year, data = prodAll %>%
filter(Country == "Vietnam", year >= "2000")))/1000)) %>%
layout(yaxis = list(zeroline = FALSE))
subplot(pBr, pVn, shareY = FALSE, shareX = FALSE, titleY = FALSE) %>%
layout(title = "Recent production trends in Brazil and Vietnam",
showlegend = FALSE,
yaxis = list(title="Million 60kg bags", zeroline = FALSE),
xaxis = list(title="", zeroline = FALSE),
font = list(family = "sans-serif", color = "#515151"),
margin = list(b = 20))
subplot(pBr, pVn, shareY = FALSE, shareX = FALSE, titleY = FALSE) %>%
add_annotations(x = 1.15, y = -0.1,
xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: ICO</i>") %>%
layout(title = "Recent production trends in Brazil and Vietnam",
showlegend = FALSE,
yaxis = list(title="Million 60kg bags", zeroline = FALSE),
xaxis = list(title="", zeroline = FALSE),
font = list(family = "sans-serif", color = "#515151"),
margin = list(b = 20))
subplot(pBr, pVn, shareY = FALSE, shareX = FALSE, titleY = FALSE) %>%
add_annotations(x = 1.15, y = -0.1,
xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: ICO</i>") %>%
layout(title = "Recent production trends in Brazil and Vietnam",
showlegend = FALSE,
yaxis = list(title="Million 60kg bags", zeroline = FALSE),
xaxis = list(title="", zeroline = FALSE),
font = list(family = "sans-serif", color = "#515151"),
margin = list(b = 40))
subplot(pBr, pVn, shareY = FALSE, shareX = FALSE, titleY = FALSE) %>%
add_annotations(x = 1, y = -0.1,
xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: ICO</i>") %>%
layout(title = "Recent production trends in Brazil and Vietnam",
showlegend = FALSE,
yaxis = list(title="Million 60kg bags", zeroline = FALSE),
xaxis = list(title="", zeroline = FALSE),
font = list(family = "sans-serif", color = "#515151"),
margin = list(b = 40))
subplot(pBr, pVn, shareY = FALSE, shareX = FALSE, titleY = FALSE) %>%
add_annotations(x = 1, y = -0.12,
xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: ICO</i>") %>%
layout(title = "Recent production trends in Brazil and Vietnam",
showlegend = FALSE,
yaxis = list(title="Million 60kg bags", zeroline = FALSE),
xaxis = list(title="", zeroline = FALSE),
font = list(family = "sans-serif", color = "#515151"),
margin = list(b = 40))
library(readxl)
library(readxl)
if(!(file.exists(file.path(project, "input", "prod.xlsx"))) |
!(file.exists(file.path(project, "input", "cons.xlsx")))) {
download.file(
url = c(
"http://www.ico.org/historical/1990%20onwards/Excel/1a%20-%20Total%20production.xlsx",
"http://www.ico.org/historical/1990%20onwards/Excel/1b%20-%20Domestic%20consumption.xlsx"
),
destfile = c(
file.path(project, "input", "prod.xlsx"),
file.path(project, "input", "cons.xlsx")
)
)
}
if(!(file.exists(file.path(project, "input", "prod.xlsx"))) |
!(file.exists(file.path(project, "input", "cons.xlsx")))) {
download.file(
url = c(
"http://www.ico.org/historical/1990%20onwards/Excel/1a%20-%20Total%20production.xlsx",
"http://www.ico.org/historical/1990%20onwards/Excel/1b%20-%20Domestic%20consumption.xlsx"
),
destfile = c(
file.path(project, "input", "prod.xlsx"),
file.path(project, "input", "cons.xlsx")
)
)
}
pColIndoData <- c(file.path(project, "input", "prod.xlsx"),
file.path(project, "input", "cons.xlsx")) %>%
map(read_excel, sheet = 1, col_names = TRUE, skip = 3) %>%
map(select, -2) %>%
map(gather, -`Crop year`, key = year, value = volume) %>%
map(rename, country = `Crop year`) %>%
map(mutate, year = lubridate::dmy(paste0("01-01-", str_sub(year, 1, 4)))) %>%
map(mutate, volume = volume/1000) %>%
map(filter, grepl("(?:Colombia|Indonesia)", country)) %>%
map(filter, year >= "2000-01-01") %>%
map(na.omit)
pColIndo2 <- plot_ly() %>%
add_lines(data = pColIndoData[[1]] %>% filter(country == "Indonesia"), name = "Production",
text = ~paste0("(", lubridate::year(year), ") Production: ", round(volume, 1), "m"),
hoverinfo = "text", x = ~year, y = ~volume, fill = "tozeroy",
line = list(color = blogColours[5]), fillcolor = paste0(blogColours[5], "59")) %>%
add_lines(data = pColIndoData[[2]] %>% filter(country == "Indonesia"), name = "Consumption",
text = ~paste0("(", lubridate::year(year), ") Consumption: ", round(volume, 1), "m"),
hoverinfo = "text", x = ~year, y = ~volume, fill = "tozeroy",
line = list(color = blogColours[5]), fillcolor = paste0(blogColours[5], "BF")) %>%
add_annotations(text = "Indonesia", font = list(family = "sans-serif", color = "#515151"),
bgcolor = "#D9D9D9", borderpad = 4, showarrow = FALSE, width = 120,
xref = "paper", x = 0.5, xanchor = "center",
yref = "y", y = 15.5, yanchor = "top") %>%
add_annotations(x = lubridate::dmy("31-12-2015"), xref = "x2", xanchor = "right",
y = c(4, 10), yref = "y",
bgcolor = c(paste0(blogColours[5], "59"), paste0(blogColours[5], "59")),
bordercolor = blogColours[5], borderpad = 4,
text = c("Consumption", "Production"), showarrow = FALSE,
font = list(family = "sans-serif", size = 12, color = "#515151")) %>%
layout(xaxis = list(showgrid = FALSE))
subplot(pColIndo1, pColIndo2, nrows = 1, shareY = TRUE, shareX = TRUE, titleX = FALSE,
which_layout = 2) %>%
layout(title = "Coffee consumption and production in Colombia and Indonesia",
xaxis = list(title = "", showline = FALSE, showgrid = FALSE),
yaxis = list(title = "Million 60kg bags", zeroline = FALSE),
font = list(family = "sans-serif", color = "#515151"),
margin = list(b = 20),
showlegend = FALSE)
pColIndo1 <- plot_ly() %>%
add_lines(data = pColIndoData[[1]] %>% filter(country == "Colombia"), name = "Production",
text = ~paste0("(", lubridate::year(year), ") Production: ", round(volume, 1), "m"),
hoverinfo = "text", x = ~year, y = ~volume, fill = "tozeroy",
line = list(color = blogColours[4]), fillcolor = paste0(blogColours[4], "59")) %>%
add_lines(data = pColIndoData[[2]] %>% filter(country == "Colombia"), name = "Consumption",
text = ~paste0("(", lubridate::year(year), ") Consumption: ", round(volume, 1), "m"),
hoverinfo = "text", x = ~year, y = ~volume, fill = "tozeroy",
line = list(color = blogColours[4]), fillcolor = paste0(blogColours[4], "BF")) %>%
add_annotations(text = "Colombia", font = list(family = "sans-serif", color = "#515151"),
bgcolor = "#D9D9D9", borderpad = 4, showarrow = FALSE, width = 120,
xref = "paper", x = 0.5, xanchor = "center",
yref = "y", y = 15.5, yanchor = "top") %>%
add_annotations(x = lubridate::dmy("31-12-2015"), xref = "x", xanchor = "right",
y = c(1, 14), yref = "y",
bgcolor = c(paste0(blogColours[4], "59"), paste0(blogColours[4], "59")),
bordercolor = blogColours[4], borderpad = 4,
text = c("Consumption", "Production"), showarrow = FALSE,
font = list(family = "sans-serif", size = 12, color = "#515151"))
pColIndo2 <- plot_ly() %>%
add_lines(data = pColIndoData[[1]] %>% filter(country == "Indonesia"), name = "Production",
text = ~paste0("(", lubridate::year(year), ") Production: ", round(volume, 1), "m"),
hoverinfo = "text", x = ~year, y = ~volume, fill = "tozeroy",
line = list(color = blogColours[5]), fillcolor = paste0(blogColours[5], "59")) %>%
add_lines(data = pColIndoData[[2]] %>% filter(country == "Indonesia"), name = "Consumption",
text = ~paste0("(", lubridate::year(year), ") Consumption: ", round(volume, 1), "m"),
hoverinfo = "text", x = ~year, y = ~volume, fill = "tozeroy",
line = list(color = blogColours[5]), fillcolor = paste0(blogColours[5], "BF")) %>%
add_annotations(text = "Indonesia", font = list(family = "sans-serif", color = "#515151"),
bgcolor = "#D9D9D9", borderpad = 4, showarrow = FALSE, width = 120,
xref = "paper", x = 0.5, xanchor = "center",
yref = "y", y = 15.5, yanchor = "top") %>%
add_annotations(x = lubridate::dmy("31-12-2015"), xref = "x2", xanchor = "right",
y = c(4, 10), yref = "y",
bgcolor = c(paste0(blogColours[5], "59"), paste0(blogColours[5], "59")),
bordercolor = blogColours[5], borderpad = 4,
text = c("Consumption", "Production"), showarrow = FALSE,
font = list(family = "sans-serif", size = 12, color = "#515151")) %>%
layout(xaxis = list(showgrid = FALSE))
subplot(pColIndo1, pColIndo2, nrows = 1, shareY = TRUE, shareX = TRUE, titleX = FALSE,
which_layout = 2) %>%
layout(title = "Coffee consumption and production in Colombia and Indonesia",
xaxis = list(title = "", showline = FALSE, showgrid = FALSE),
yaxis = list(title = "Million 60kg bags", zeroline = FALSE),
font = list(family = "sans-serif", color = "#515151"),
margin = list(b = 20),
showlegend = FALSE)
subplot(pColIndo1, pColIndo2, nrows = 1, shareY = TRUE, shareX = TRUE, titleX = FALSE,
which_layout = 2) %>%
add_annotations(x = 1, y = -0.12,
xref = "paper", yref = "paper",
showarrow = F,
xanchor = "right",
text = "<i>Source: ICO</i>") %>%
layout(title = "Coffee consumption and production in Colombia and Indonesia",
xaxis = list(title = "", showline = FALSE, showgrid = FALSE),
yaxis = list(title = "Million 60kg bags", zeroline = FALSE),
font = list(family = "sans-serif", color = "#515151"),
margin = list(b = 40),
showlegend = FALSE)
build_site()
build_site()
devtools::install_github('rstudio/blogdown')
library(blogdown)
blogdown:::serve_site()
servr::daemon_stop("4319556816")
install.packages(c("dplyr", "gdata", "janeaustenr", "mapproj", "maps"))
install.packages(c("dplyr", "gdata", "janeaustenr", "mapproj", "maps"))
blogdown::build_site()
top10 <- prodAll %>%
group_by(Country) %>% top_n(n = 1, wt = year) %>% ungroup() %>%
top_n(n = 10, wt = value) %>% magrittr::extract2('Country')
coffeestats <- "~/Dropbox/Work/coffeestats"
blogColours <- c("#619fb5", "#ef8066", "#ffcb90", "#70c793", "#7882c0")
project <- "~/Dropbox/Work/coffeestats/projects/canCoffeeOvertake"
source("~/R/tomcopple.github.io/scripts/theme_blog.R")
knitr::opts_chunk$set(message = F, warning = F, error = F)
library(tidyverse);library(lubridate);library(plotly)
library(tabulizer);library(pdftools);library(stringr)
top10 <- prodAll %>%
group_by(Country) %>% top_n(n = 1, wt = year) %>% ungroup() %>%
top_n(n = 10, wt = value) %>% magrittr::extract2('Country')
prodAll
prodAll %>%
group_by(Country) %>% top_n(n = 1, wt = year) %>% ungroup()
prodAll
prodAll %>%
group_by(Country)
prodAll %>%
group_by(Country) %>% top_n(n = 1, wt = year)
prodAll
?top_n
prodAll %>% na.omit() %>%
group_by(Country) %>% top_n(n = 1, wt = year) %>% ungroup()
prodAll
max(prodAll$year)
top10 <- prodAll %>% na.omit() %>%
filter(year == "2016") %>%
top_n(n = 10, wt = value) %>% magrittr::extract2('Country')
pYieldData <- read_csv(file.path(coffeestats, "input/faostat.csv")) %>%
select(country = Area, year = Year, value = Value) %>%
# Fix spelling
mutate(country = ifelse(grepl("Viet Nam", country), "Vietnam", country)) %>%
# Make sure it's the most recent year
group_by(country) %>% top_n(n = 1, wt = year) %>% ungroup() %>%
# Get top 10 producers; make into factor for plot, fix units
filter(country %in% top10) %>%
mutate(country = forcats::fct_reorder(country, value),
value = value/10)
rm(list = ls())
blogdown::build_site()
warnings()
blogdown:::serve_site()
servr::daemon_stop("4790948288")
build_site()
